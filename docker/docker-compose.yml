version: '2.3'

x-php: &php
  init: true
  depends_on:
    db:
      condition: service_healthy
    redis:
      condition: service_started
    elasticsearch:
      condition: service_healthy
    xray:
      condition: service_started
    mailhog:
      condition: service_started
  image: humanmade/altis-local-server-php:1.0.0-rc1
  links:
    - "db:db-read-replica"
    - "s3:s3.localhost"
  external_links:
    - "proxy:${COMPOSE_PROJECT_NAME:-default}.altis.dev"
  volumes:
    - "${VOLUME}:/usr/src/app:delegated"
    - "${PWD}/php.ini:/usr/local/etc/php/conf.d/altis.ini"
  environment:
    DB_HOST: db
    DB_READ_REPLICA_HOST: db-read-replica
    DB_PASSWORD: wordpress
    DB_NAME: wordpress
    DB_USER: wordpress
    REDIS_HOST: redis
    REDIS_PORT: 6379
    WP_DEBUG: 1
    WP_DEBUG_DISPLAY: 0
    PAGER: more
    HM_ENV_ARCHITECTURE: 'local-server'
    HM_DEPLOYMENT_REVISION: 'dev'
    ELASTICSEARCH_HOST: elasticsearch
    ELASTICSEARCH_PORT: 9200
    AWS_XRAY_DAEMON_HOST: xray
    S3_UPLOADS_ENDPOINT: http://s3.localhost:8000/
    S3_UPLOADS_BUCKET: s3-${COMPOSE_PROJECT_NAME:-default}
    S3_UPLOADS_BUCKET_URL: https://s3-${COMPOSE_PROJECT_NAME:-default}.altis.dev
    S3_UPLOADS_KEY: not-needed
    S3_UPLOADS_SECRET: not-needed
    S3_UPLOADS_REGION: not-needed
    TACHYON_URL: https://${COMPOSE_PROJECT_NAME:-default}.altis.dev/tachyon
    PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025

services:
  db:
    image: mysql:5.7
    volumes:
      - "db-data:/var/lib/mysql"
    ports:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: wordpress
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "wordpress", "-pwordpress" ]
      timeout: 5s
      interval: 5s
      retries: 10
  redis:
    image: redis:3.2-alpine
    ports:
      - '6379'
  php:
    <<: *php
    ports:
      - '9000'
  nginx:
    image: humanmade/altis-local-server-nginx:1.0.0-rc1
    networks:
      - proxy
      - default
    depends_on:
      - php
    volumes:
      - "${VOLUME}:/usr/src/app:delegated"
    ports:
      - "8080"
    labels:
      - "traefik.frontend.priority=1"
      - "traefik.port=8080"
      - "traefik.protocol=https"
      - "traefik.docker.network=proxy"
      - "traefik.frontend.rule=HostRegexp:${COMPOSE_PROJECT_NAME:-default}.altis.dev,{subdomain:[a-z.-_]+}.${COMPOSE_PROJECT_NAME:-default}.altis.dev"
  xray:
    image: amazon/aws-xray-daemon:3.0.1
    ports:
      - "2000"
    environment:
      AWS_ACCESS_KEY_ID: YOUR_KEY_HERE
      AWS_SECRET_ACCESS_KEY: YOUR_SECRET_HERE
      AWS_REGION: us-east-1
  cavalcade:
    <<: *php
    entrypoint:
      - /usr/local/bin/cavalcade
    user: "nobody:nobody"
  elasticsearch:
    image: humanmade/altis-local-server-elasticsearch:1.0.0-rc1
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: "768m"
    memswap_limit: "768m"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - "9200"
    networks:
      - proxy
      - default
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 10
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    labels:
      - "traefik.port=9200"
      - "traefik.protocol=http"
      - "traefik.docker.network=proxy"
      - "traefik.frontend.rule=HostRegexp:elasticsearch-${COMPOSE_PROJECT_NAME:-default}.altis.dev"
  s3:
    image: fingershock/fakes3:0.2.4
    volumes:
      - "s3:/fakes3_data:rw"
    ports:
      - "8000"
    networks:
      - proxy
      - default
    labels:
      - "traefik.port=8000"
      - "traefik.protocol=http"
      - "traefik.docker.network=proxy"
      - "traefik.frontend.rule=HostRegexp:s3-${COMPOSE_PROJECT_NAME:-default}.altis.dev"
  tachyon:
    image: humanmade/tachyon:1.1.0
    ports:
      - "8080"
    networks:
      - proxy
    labels:
      - "traefik.port=8080"
      - "traefik.protocol=http"
      - "traefik.docker.network=proxy"
      - "traefik.frontend.rule=HostRegexp:${COMPOSE_PROJECT_NAME:-default}.altis.dev,{subdomain:[a-z.-_]+}.${COMPOSE_PROJECT_NAME:-default}.altis.dev;PathPrefix:/tachyon;ReplacePathRegex:^/tachyon/(.*) /uploads/$$1"
    environment:
      AWS_REGION: not-needed
      AWS_S3_BUCKET: s3-${COMPOSE_PROJECT_NAME:-default}
      AWS_S3_ENDPOINT: http://s3.localhost:8000/
    links:
      - "s3:s3.localhost"
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "8025"
      - "1025"
    networks:
      - proxy
      - default
    labels:
      - "traefik.port=8025"
      - "traefik.protocol=http"
      - "traefik.docker.network=proxy"
      - "traefik.frontend.rule=HostRegexp:${COMPOSE_PROJECT_NAME:-default}.altis.dev;PathPrefix:/mailhog"
    environment:
      MH_UI_WEB_PATH: mailhog

networks:
  default:
  proxy:
    external:
      name: proxy

volumes:
  db-data:
  es-data:
  tmp:
  s3:
